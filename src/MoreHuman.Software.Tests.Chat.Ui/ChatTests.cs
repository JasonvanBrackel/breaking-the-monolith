// Generated by Selenium IDE

using System;
using System.Collections.Generic;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using Xunit;

namespace MoreHuman.Software.Tests.Chat.Ui
{
    public class ChatTests : IDisposable
    {
        public IWebDriver driver { get; private set; }
        public IDictionary<String, Object> vars { get; private set; }
        public IJavaScriptExecutor js { get; private set; }
        public ChatTests()
        {
            //driver = new FirefoxDriver(FirefoxDriverService.CreateDefaultService("C:\\tools\\selenium", "geckodriver.exe"));
            driver = new ChromeDriver(ChromeDriverService.CreateDefaultService("C:\\tools\\selenium", "chromedriver.exe"));
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<String, Object>();
        }
        public void Dispose()
        {
            driver.Quit();
        }
        [Fact]
        public void When_a_new_user_joins()
        {
            string host = "localhost";
            int port = 80;

            const string mainPage = "default.htm";

            UriBuilder builder = new UriBuilder("http", host, port);
            builder.Path = mainPage;
            var testPath = builder.Uri;
        
            // Act
            driver.Navigate().GoToUrl(testPath);

            // Wait for stuff to reload
            Thread.Sleep(TimeSpan.FromSeconds(5));

            // Assert time are date are nowish
            driver.SwitchTo().Frame("chat_top");
            var date = driver.FindElement(By.Id("date")).Text;
            var time = driver.FindElement(By.Id("time")).Text;
            var dateTime = Convert.ToDateTime(date + " " + time);
            Assert.True((DateTime.Now - dateTime).TotalSeconds < 5);

            // Assert message time is nowish.
            var messageTime = Convert.ToDateTime(DateTime.Now.ToShortDateString() + " " + driver.FindElement(By.CssSelector("tr:nth-child(3) > td:nth-child(2)")).Text);
            Assert.True((DateTime.Now - messageTime).TotalSeconds < 60);
            
            // Assert User is guest
            Assert.Equal("Guest", driver.FindElement(By.CssSelector("tr:nth-child(3) > td:nth-child(3)")).Text.Trim()); 

            // Assert Message is that a guest has joined 
            var messageText = driver.FindElement(By.CssSelector("tr:nth-child(3) > td:nth-child(4)")).Text;
            Assert.StartsWith("New visitor from I.P.", messageText);
        }

        [Fact]
        public void When_a_message_is_sent()
        {
            string host = "localhost";
            int port = 80;

            const string mainPage = "default.htm";

            UriBuilder builder = new UriBuilder("http", host, port);
            builder.Path = mainPage;
            var testPath = builder.Uri;

            // Arrange
            driver.Navigate().GoToUrl(testPath);


            // Act
            // Send a message
            driver.SwitchTo().Frame("chat_message");
            var random = new Random(DateTime.Now.Millisecond);
            var expectedUsername = "Test_user" + random.Next();
            var expectedMessage = "Test_message " + random.Next();
            driver.FindElement(By.Name("username")).Clear();
            driver.FindElement(By.Name("username")).SendKeys(expectedUsername);
            driver.FindElement(By.Name("message")).SendKeys(expectedMessage);
            driver.FindElement(By.CssSelector("input:nth-child(2)")).Click();
            Thread.Sleep(TimeSpan.FromSeconds(5));

            driver.SwitchTo().ParentFrame();
            driver.SwitchTo().Frame("chat_top");
            var date = driver.FindElement(By.Id("date")).Text;
            var time = driver.FindElement(By.Id("time")).Text;
            var dateTime = Convert.ToDateTime(date + " " + time);
            Assert.True((DateTime.Now - dateTime).TotalSeconds < 5);

            // Assert message time is nowish.
            var messageTime = Convert.ToDateTime(DateTime.Now.ToShortDateString() + " " + driver.FindElement(By.CssSelector("tr:nth-child(3) > td:nth-child(2)")).Text);
            Assert.True((DateTime.Now - messageTime).TotalSeconds < 60);

            // Assert User is the username
            var actualUsername = driver.FindElement(By.CssSelector("tr:nth-child(3) > td:nth-child(3)")).Text.Trim();
            Assert.Equal(expectedUsername, actualUsername);

            // Assert Message is that a guest has joined 
            var messageText = driver.FindElement(By.CssSelector("tr:nth-child(3) > td:nth-child(4)")).Text;
            Assert.StartsWith(expectedMessage, messageText);
        }

    }
}
